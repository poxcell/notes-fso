{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","baseUrl","axios","get","then","response","data","newObject","post","id","put","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","console","log","length","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"gMAaeA,EAXF,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBACbC,EAAQF,EAAKG,UACf,qBAAuB,iBAC3B,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,QCG3BK,EAXM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OAAgB,OAAZA,EACK,KAGP,qBAAKJ,UAAU,QAAf,SACGI,K,gBCLDC,EAAU,aAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCTrCK,EAAS,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,2GA2FSC,EArFH,SAACC,GAAW,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAESF,mBAAS,IAFlB,mBAEdG,EAFc,KAELC,EAFK,OAGSJ,oBAAS,GAHlB,mBAGdK,EAHc,KAGLC,EAHK,OAImBN,mBAAS,MAJ5B,mBAIdO,EAJc,KAIAC,EAJA,KAMrBC,qBAAU,WACRC,IAEGxB,MAAK,SAAAyB,GACJT,EAASS,QAEb,IACFC,QAAQC,IAAI,SAASZ,EAAMa,OAAO,SAElC,IAAMC,EAAcV,EAChBJ,EACDA,EAAMe,QAAO,SAAA1C,GAAI,OAAIA,EAAKG,aAyC7B,OACE,gCACE,uCACA,cAAC,EAAD,CAAcK,QAAWyB,IACzB,8BACE,yBAAQ3B,QAAS,kBAAK0B,GAAYD,IAAlC,kBACQA,EAAU,YAAc,WAGlC,6BACGU,EAAYE,KAAI,SAAA3C,GAAI,OACnB,cAAC,EAAD,CACEA,KAAMA,EACNC,iBAAkB,kBAjCD,SAACgB,GAC1B,IAAMjB,EAAO2B,EAAMiB,MAAK,SAAAC,GAAC,OAAIA,EAAE5B,KAAOA,KAChC6B,EAAW,2BAAO9C,GAAP,IAAaG,WAAYH,EAAKG,YAE/CiC,EACUnB,EAAI6B,GACXlC,MAAK,SAAAmC,GACJnB,EAASD,EAAMgB,KAAI,SAAA3C,GAAI,OAAIA,EAAKiB,KAAOA,EAAKjB,EAAO+C,SAEpDC,OAAM,SAAAC,GACLf,EAAgB,SAAD,OACJlC,EAAKK,QADD,sCAGf6C,YAAW,WACThB,EAAgB,QAChB,KACFN,EAASD,EAAMe,QAAO,SAAAG,GAAC,OAAIA,EAAE5B,KAAOA,SAiBRkC,CAAmBnD,EAAKiB,MAFvCjB,EAAKiB,SAMpB,uBAAMmC,SAxDM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBlD,QAASwB,EACT2B,KAAM,IAAIC,KACVtD,UAAWuD,KAAKC,SAAW,IAE7BvB,EACUmB,GACP3C,MAAK,SAAAmC,GACJnB,EAASD,EAAMiC,OAAOb,IACtBjB,EAAW,QA6Cb,UACE,uBAAO+B,MAAOhC,EAASiC,SA1CJ,SAACT,GACxBvB,EAAWuB,EAAMU,OAAOF,UA0CpB,wBAAQG,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MChGNC,IAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,W","file":"static/js/main.853adafe.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({note, toggleImportance}) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n  return(\r\n    <li className='note'>\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>  \r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","const Notification = ({message}) => {\r\n  if (message === null){\r\n    return null\r\n  }\r\n  return(\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React,{useState,useEffect} from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport noteService from './services/notes'\n\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n  return(\n    <div style = {footerStyle}>\n      <br/>\n      <em>Note app, Department of Computer Science, University of Tlaxcala 2021</em>\n    </div>\n  )\n}\n\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(()=>{\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  },[])\n  console.log('render',notes.length,'notes')\n\n  const notesToShow = showAll\n    ? notes\n    :notes.filter(note => note.important)\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() < 0.5,\n    }\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = {...note, important: !note.important}\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        },5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  return(\n    <div>\n      <h1>Notes</h1>\n      <Notification message = {errorMessage}></Notification>\n      <div>\n        <button onClick={()=> setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => \n          <Note key={note.id} \n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange}/>\n        <button type='submit'>save</button>\n      </form>\n      <Footer/>\n    </div>\n  )\n}\n\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App/>,document.getElementById('root'))\n\n\n"],"sourceRoot":""}